CREATE DATABASE flight_data;
USE flight_data;

#structure
CREATE TABLE flights (
  YEAR INT,
  MONTH INT,
  DAY INT,
  DAY_OF_WEEK INT,
  AIRLINE VARCHAR(10),
  FLIGHT_NUMBER VARCHAR(10),
  TAIL_NUMBER VARCHAR(20),
  ORIGIN_AIRPORT VARCHAR(10),
  DESTINATION_AIRPORT VARCHAR(10),
  SCHEDULED_DEPARTURE INT,
  DEPARTURE_TIME INT,
  DEPARTURE_DELAY INT,
  TAXI_OUT INT,
  WHEELS_OFF INT,
  SCHEDULED_TIME INT,
  ELAPSED_TIME INT,
  AIR_TIME INT,
  DISTANCE INT,
  WHEELS_ON INT,
  TAXI_IN INT,
  SCHEDULED_ARRIVAL INT,
  ARRIVAL_TIME INT,
  ARRIVAL_DELAY INT,
  DIVERTED INT,
  CANCELLED INT,
  CANCELLATION_REASON VARCHAR(5),
  AIR_SYSTEM_DELAY INT,
  SECURITY_DELAY INT,
  AIRLINE_DELAY INT,
  LATE_AIRCRAFT_DELAY INT,
  WEATHER_DELAY INT
);
#loading data

LOAD DATA INFILE 'C:\Users\hbbbb\Documents\INTERNSHIP\POWER BI\Final_project_data_archive\flights.csv'
INTO TABLE flights
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;
SELECT COUNT(*) FROM flights;
SELECT * FROM flights LIMIT 10;

#duplicates

SELECT YEAR, MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT, COUNT(*) AS duplicate_count
FROM flights
GROUP BY YEAR, MONTH, DAY, AIRLINE, FLIGHT_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT
HAVING COUNT(*) > 1;
ALTER TABLE flights ADD COLUMN id INT AUTO_INCREMENT PRIMARY KEY;

DELETE f1
FROM flights f1
JOIN flights f2 
ON f1.YEAR = f2.YEAR
AND f1.MONTH = f2.MONTH
AND f1.DAY = f2.DAY
AND f1.AIRLINE = f2.AIRLINE
AND f1.FLIGHT_NUMBER = f2.FLIGHT_NUMBER
AND f1.ORIGIN_AIRPORT = f2.ORIGIN_AIRPORT
AND f1.DESTINATION_AIRPORT = f2.DESTINATION_AIRPORT
WHERE f1.id > f2.id;
SELECT COUNT(*) FROM flights;
SELECT * FROM flights LIMIT 10;

SELECT COUNT(*) AS total_rows FROM flights;


#removing nulls

SELECT 
  SUM(CASE WHEN DEPARTURE_DELAY IS NULL OR DEPARTURE_DELAY = '' THEN 1 ELSE 0 END) AS missing_departure_delay,
  SUM(CASE WHEN ARRIVAL_DELAY IS NULL OR ARRIVAL_DELAY = '' THEN 1 ELSE 0 END) AS missing_arrival_delay,
  SUM(CASE WHEN AIRLINE IS NULL OR AIRLINE = '' THEN 1 ELSE 0 END) AS missing_airline
FROM flights;
DELETE FROM flights
WHERE AIRLINE IS NULL OR AIRLINE = ''
   OR FLIGHT_NUMBER IS NULL OR FLIGHT_NUMBER = '';
SELECT COUNT(*) FROM flights;
SELECT * FROM flights LIMIT 10;

#removing empty columns

ALTER TABLE flights DROP COLUMN SECURITY_DELAY;

#FIXING NEGATIVE DELAYS
UPDATE flights
SET DEPARTURE_DELAY = 0
WHERE DEPARTURE_DELAY < -60;

UPDATE flights
SET ARRIVAL_DELAY = 0
WHERE ARRIVAL_DELAY < -60;


#HANDLE INCONSISTENT DATA TYPES

ALTER TABLE flights
MODIFY DEPARTURE_DELAY INT,
MODIFY ARRIVAL_DELAY INT,
MODIFY DISTANCE INT,
MODIFY TAXI_OUT INT,
MODIFY TAXI_IN INT;

#CONVERT TIME COLUMN INTO READABLE FORMAT
SET SQL_SAFE_UPDATES = 0;

UPDATE flights
SET SCHEDULED_DEPARTURE = LPAD(SCHEDULED_DEPARTURE, 4, '0');

#REMOVING DIVERTED OR CANCELLED FLIGHT
DELETE FROM flights
WHERE CANCELLED = 1 OR DIVERTED = 1;

#STANDARDIZED AIRLINE CODE
UPDATE flights f
JOIN airlines a ON f.AIRLINE = a.IATA_CODE
SET f.AIRLINE = a.AIRLINE;

#


UPDATE flights
SET flight_date = STR_TO_DATE(CONCAT(YEAR, '-', LPAD(MONTH,2,'0'), '-', LPAD(DAY,2,'0')), '%Y-%m-%d');
SELECT COUNT(*) FROM flights;
SELECT * FROM flights LIMIT 10;

#ON TIME ARRIVAL RATE
SELECT 
    ROUND(
        (SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) / COUNT(*)) * 100, 
        2
    ) AS On_Time_Arrival_Rate
FROM flights
WHERE CANCELLED = 0;


SELECT 
    AIRLINE,
    ROUND(
        (SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) / COUNT(*)) * 100, 
        2
    ) AS On_Time_Arrival_Rate
FROM flights
WHERE CANCELLED = 0
GROUP BY AIRLINE
ORDER BY On_Time_Arrival_Rate DESC;
